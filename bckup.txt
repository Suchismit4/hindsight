# Extract the data as a JAX array
        if isinstance(self.obj, xr.DataArray):
            data = self.obj.data 
        elif isinstance(self.obj, xr.Dataset):
            # Handle Dataset by applying rolling to each DataArray within
            rolled_data = {}
            for var in self.obj.data_vars:
                rolled = self.reduce(
                    self.obj[var], 
                    dim=self.dim, 
                    window=self.window, 
                    func=func, 
                    **kwargs
                )
                rolled_data[var] = rolled
            return xr.Dataset(rolled_data, coords=self.obj.coords)
        else:
            raise TypeError("Unsupported xarray object type.")

        # Apply the u_roll method from TimeSeriesOps
        rolled_array = TimeSeriesOps.u_roll(
            data=data,
            window_size=self.window,
            func=func,
            overlap_factor=kwargs.get('overlap_factor', None)
        )
        
        # Create a new xarray object with the rolled data
        rolled_obj = self.obj.copy(data=rolled_array)
        